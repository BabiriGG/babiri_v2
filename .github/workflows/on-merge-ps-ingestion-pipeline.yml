name: PS Ingestion CI on Merge

on:
    pull_request:
        types: [closed]

jobs:
    push-ps-ingestion-ecr-images:
        name: Push ECR Images
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Add SHORT_SHA env property with commit short sha
              run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

            - name: Check if PS Replay Extraction files have changed
              id: changed-replay-extraction-files
              uses: tj-actions/changed-files@v35
              with:
                  files: |
                      ./src/ps_ingestion_pipeline/ps_replay_extraction_lambda/**/*.py

            - name: Build and push PS Replay Extraction Lambda image
              if: steps.changed-replay-extraction-files.outputs.any_changed == 'true'
              working-directory: ./src/ps_ingestion_pipeline/ps_replay_extraction_lambda
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ps-replay-extraction-lambda
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA} .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA}

            - name: Build and push PS Replay Transform Lambda image
              working-directory: ./src/ps_ingestion_pipeline/ps_replay_transform_lambda
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ps-replay-transform-lambda
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA} .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA}

            - name: Build and push PS Teams DDB Writer Lambda image
              working-directory: ./src/ps_ingestion_pipeline/ps_teams_ddb_writer_lambda
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: ps-teams-ddb-writer-lambda
              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA} .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:${SHORT_SHA}
